name: check-available-pytorch-dists

on:
  pull_request:
    paths:
      - ".github/workflows/check-available-pytorch-dists.yml"
      - ".github/incorrect_pytorch_dists_issue_template.md"
      - "scripts/check_available_pytorch_dists.py"

  schedule:
    - cron: "0 4 * * *"

jobs:
  check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup development environment
        uses: ./.github/actions/setup-dev-env

      - name: Check available PyTorch distributions
        id: pytorch-dists
        run: |
          PYTORCH_DISTS=`python scripts/check_available_pytorch_dists.py`
          echo "pytorch-dists=${PYTORCH_DISTS}" >> $GITHUB_OUTPUT
          if [[ -n "${PYTORCH_DISTS}" ]]; then { echo "${PYTORCH_DISTS}"; exit 1; }; fi

      - name: Check template
        if: failure() && github.event_name != 'schedule'
        shell: python
        env:
          PYTORCH_DISTRIBUTIONS: ${{ steps.pytorch-dists.outputs.pytorch-dists }}
        run: |
          import os
          import pathlib

          import jinja2

          path = pathlib.Path.cwd() / ".github"
          loader = jinja2.FileSystemLoader(searchpath=path)
          env = jinja2.Environment(loader=loader)
          template = env.get_template("incorrect_pytorch_dists_issue_template.md")

          print(
              template.render(
                  env={"PYTORCH_DISTRIBUTIONS": os.environ["PYTORCH_DISTRIBUTIONS"]},
              )
          )

      - uses: JasonEtco/create-an-issue@v2.6.0
        if: failure() && github.event_name == 'schedule'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PYTORCH_DISTRIBUTIONS: ${{ steps.pytorch-dists.outputs.pytorch-dists }}
        with:
          filename: .github/incorrect_pytorch_dists_issue_template.md
          update_existing: false
